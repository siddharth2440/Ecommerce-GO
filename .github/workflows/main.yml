name: ecomm-tutorial

on:
    push:
        branches:
            - main

jobs:
    check-changes:
        runs-on: ubuntu-latest
        outputs:
            server_changes: ${{steps.server_changed.outputs.server}}

        steps:
            - name: Checkout the code
              uses: actions/checkout@v3
            
            - name: check changes for server
              id: server_changed
              uses: dorny/paths-filter@v3
              with:
                  filters: |
                    server:
                        - './**'
        
    build-push:
        needs: check-changes
        if: needs.check-changes.outputs.server_changes=='true'
        runs-on: ubuntu-latest

        steps:
            - name: checkout code
              uses: actions/checkout@v3
            
            - name: Setup Docker BuildX
              uses: docker/setup-buildx-action@v2
            
            - name: install docker compose
              run: |
                sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                docker-compose --version
            
            - name: build the Docker image
              run: |
                cd ./
                docker build -t itsmonday231/api_image .
            
            - name: login to docker
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_PAT}}

            - name: push to docker
              run: |
                 docker-compose -f docker-compose.yml build
                 docker-compose -f docker-compose.yml push
    server:
        needs: check-changes
        if: needs.check-changes.outputs.server_changes=='true'
        runs-on: ubuntu-latest

        steps:
            - name: nice working you're good to go
              run: echo "Server is up and running!"
    
    notify:
        needs: [server]
        runs-on: ubuntu-latest
        if: always()

        steps:
            - name: send notification
              uses: 8398a7/action-slack@v3
              with:
                 status: ${{job.status}}
                 fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
              env:
                 SLACK_WEBHOOK_URL: 'https://hooks.slack.com/services/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'